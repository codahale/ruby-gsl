This is a port of the GNU Scientific Library to the Ruby programming language.

The GNU Scientific Library is a collection of routines for numerical computing.
To find out more about GSL, please go to http://sources.redhat.com/gsl/
This version of ruby-gsl requires GSL 1.5.

Ruby is an interpreted scripting language for quick and easy object-oriented 
programming. 
To find out more about Ruby, please go to http://www.ruby-lang.org/

Things from GSL you can use in ruby-gsl:
- some error handling (ch. 3 in the GSL documentation)
- basic mathematical functions (ch. 4)
- complex numbers (ch. 5)
- functions for polynomial evaluation/roots (ch. 6)
- most "special functions" (ch. 7)
- vectors and matrices (ch. 8)
- permutations (ch. 9)
- combinations (ch. 10)
- BLAS support (ch. 12)
- linear algebra (ch. 13)
- eigensystems (ch. 14)
- numerical integration (ch. 16)
- random number generation (ch. 17)
- quasi-random sequences (ch. 18)
- most random number distributions (ch. 19)
- most statistical functions (ch. 20)
- histograms (ch. 21)
- Monte Carlo integration (ch. 23)
- Simulated Annealing (not reliable) (ch. 24)
- interpolation (ch. 26)
- numerical differentiation (ch. 27)
- Chebyshev approximation (ch. 28)
- series acceleration (ch. 29)
- Discrete Hankel Transforms (ch. 30)
- 1-dimensional root-finding (ch. 31)
- 1-dimensional minimization (ch. 32)
- some functions for least-squares fitting (ch. 35)
- physical constants (ch. 37)

We tried to keep the names/arguments/etc. as close to the original
GSL functions so that reading the GSL documentation should suffice
to use ruby-gsl. However in some places it might be more appropriate
to convert some functions to a more rubyesque way.

As of version 0.1.2 we included some source code from Yoshiki Tsunesada's
Ruby/GSL. This way we will have some nice and complete GSL wrapper some day.

If you have any questions or spot errors please feel free to contact us.
Testing and development is with Ruby 1.8.1 and GSL 1.5.
